import React, { useRef } from 'react';
import { View, Text, Image, TouchableOpacity, ScrollView, TextInput, StyleSheet, Dimensions } from 'react-native';
import LottieView from 'lottie-react-native';
import animationData from '@/assets/lottie.json';
import Rive, { RiveRef } from 'rive-react-native';
import { router } from 'expo-router';

// L·∫•y chi·ªÅu r·ªông m√†n h√¨nh ƒë·ªÉ t√≠nh to√°n k√≠ch th∆∞·ªõc
const { width } = Dimensions.get('window');

// ƒê·ªãnh nghƒ©a type ServiceItem
interface ServiceItem {
    id: string;
    slug: string,
    name: string;
    icon: string;
    image: { uri: string };
    time: string;
    backgroundColor?: string;
    span?: number;

}

// D·ªØ li·ªáu d·ªãch v·ª• v·ªõi span cho Send Money
const services: ServiceItem[] = [
    { id: '1', slug: 'foodApp', name: 'Food', icon: 'üçî', image: { uri: 'https://img.icons8.com/3d-fluency/94/take-away-food.png' }, time: '20 min', span: 1 },
    { id: '2', slug: 'groceryApp', name: 'Grocery', icon: 'üõí', image: { uri: 'https://img.icons8.com/3d-fluency/94/ingredients.png' }, time: '15 min', span: 1 },
    { id: '3', slug: 'courierApp', name: 'Courier', icon: 'üì¶', image: { uri: 'https://img.icons8.com/3d-fluency/94/delivery.png' }, time: '18 min', span: 1 },
    { id: '4', slug: 'taxiApp', name: 'Taxi', icon: 'üöó', image: { uri: 'https://img.icons8.com/3d-fluency/94/taxi.png' }, time: '15 min', span: 2 },
    { id: '5', slug: 'moneyApp', name: 'Send Money', icon: '‚û°Ô∏è', image: { uri: 'https://img.icons8.com/3d-fluency/94/money-transfer.png' }, time: '', backgroundColor: '#73E3C5', span: 1 },
    { id: '6', slug: 'cleanApp', name: 'Home Cleaning', icon: 'üè†', image: { uri: 'https://img.icons8.com/3d-fluency/94/housekeeping.png' }, time: '13 min', span: 1 },
    { id: '7', slug: 'medicineApp', name: 'Medicine', icon: 'üíä', image: { uri: 'https://img.icons8.com/3d-fluency/94/pill.png' }, time: '20 min', span: 1 },
    { id: '8', slug: 'doctorApp', name: 'Doctor', icon: 'ü©∫', image: { uri: 'https://img.icons8.com/3d-fluency/94/stethoscope.png' }, time: '30 min', span: 1 },
];


const HeroScreen = () => {

    // const handleServicePressId = (id: string) => {
    //     router.push(`/screen/${id}`);
    // };
    
    const handleServicePress = (slug: string) => {
        router.push(`/screen/${slug}`);
    };

    // H√†m render m·ªôt item d·ªãch v·ª•
    const renderServiceItem = (item: ServiceItem) => {
        const itemWidth = (width - 40) / 3; // Chi·ªÅu r·ªông c∆° b·∫£n cho 1 c·ªôt
        return (
            <TouchableOpacity
                style={{
                    width: itemWidth * (item.span || 1),
                    height: 100,
                    backgroundColor: item.backgroundColor || '#fff',
                    borderRadius: 8,
                    margin: 4,
                    position: 'relative',
                }}
                key={item.id}
                onPress={() => handleServicePress(item.slug)}
            >
                <View style={{
                    flex: 1,
                    flexDirection: 'column',
                    alignItems: 'flex-end',
                    padding: 10, // Th√™m padding cho to√†n b·ªô n·ªôi dung
                }}>
                    <View style={{
                        width: '100%',
                    }}>
                        <Text
                            style={{
                                fontSize: 16,
                                fontWeight: 'bold',
                                color: item.backgroundColor ? '#fff' : '#000',
                                textAlign: 'left',
                            }}
                        >
                            {item.name}
                        </Text>
                        {item.time && (
                            <Text
                                style={{
                                    fontSize: 14,
                                    color: item.backgroundColor ? '#fff' : '#000',
                                    textAlign: 'left',
                                }}
                            >
                                {item.time}
                            </Text>
                        )}
                    </View>
                    <Image
                        source={typeof item.image === 'string' ? { uri: item.image } : item.image}
                        style={{
                            width: 54,
                            height: 54,
                            resizeMode: 'contain',
                            position: 'absolute',
                            bottom: 8,  // Kho·∫£ng c√°ch t·ª´ d∆∞·ªõi
                            right: 8,   // Kho·∫£ng c√°ch t·ª´ ph·∫£i
                        }}
                    />
                </View>
            </TouchableOpacity>
        );
    };

    // H√†m chia services th√†nh c√°c h√†ng (m·ªói h√†ng t·ªëi ƒëa 3 c·ªôt)
    const renderServiceRows = () => {
        const rows: ServiceItem[][] = [];
        let currentRow: ServiceItem[] = [];
        let currentRowSpan = 0;

        services.forEach((item) => {
            const itemSpan = item.span || 1;
            currentRowSpan += itemSpan;

            if (currentRowSpan > 3) {
                // N·∫øu v∆∞·ª£t qu√° 3 c·ªôt, ƒë·∫©y h√†ng hi·ªán t·∫°i v√†o rows v√† b·∫Øt ƒë·∫ßu h√†ng m·ªõi
                rows.push(currentRow);
                currentRow = [item];
                currentRowSpan = itemSpan;
            } else {
                // Th√™m item v√†o h√†ng hi·ªán t·∫°i
                currentRow.push(item);
            }

            // N·∫øu h√†ng hi·ªán t·∫°i ƒë·ªß 3 c·ªôt, ƒë·∫©y v√†o rows v√† reset
            if (currentRowSpan === 3) {
                rows.push(currentRow);
                currentRow = [];
                currentRowSpan = 0;
            }
        });

        // ƒê·∫©y h√†ng cu·ªëi c√πng n·∫øu c√≤n item
        if (currentRow.length > 0) {
            rows.push(currentRow);
        }

        // Render c√°c h√†ng
        return rows.map((row, rowIndex) => (
            <View key={rowIndex} style={styles.row}>
                {row.map((item) => renderServiceItem(item))}
                {/* Th√™m View r·ªóng ƒë·ªÉ l·∫•p ƒë·∫ßy h√†ng n·∫øu c·∫ßn */}
                {row.reduce((sum, item) => sum + (item.span || 1), 0) < 3 && (
                    <View
                        style={{
                            width: ((width - 40) / 3) * (3 - row.reduce((sum, item) => sum + (item.span || 1), 0)),
                            height: 120,
                            margin: 5,
                        }}
                    />
                )}
            </View>
        ));
    };

    // Khai b√°o ref v·ªõi ki·ªÉu LottieView
    const animationRef = useRef<LottieView>(null);
    const riveRef = useRef<RiveRef>(null);

    // H√†m x·ª≠ l√Ω t∆∞∆°ng t√°c khi nh·∫•n
    const handlePress = () => {
        // Play animation khi nh·∫•n
        animationRef.current?.play();
    };

    // H√†m x·ª≠ l√Ω t∆∞∆°ng t√°c khi nh·∫•n
    const handlePressRive = () => {
        // Play animation khi nh·∫•n
        riveRef.current?.play();
    };
    return (
        <ScrollView style={styles.container}>
            <View style={styles.headerSection}>
                {/* N√∫t Menu */}
                <TouchableOpacity
                    style={styles.menuButton}
                >
                    <Image
                        source={{ uri: 'https://img.icons8.com/3d-fluency/94/menu.png' }}
                        style={{ width: 24, height: 24 }}
                    />
                </TouchableOpacity>

                {/* Thanh t√¨m ki·∫øm */}
                <View style={styles.searchBar}>
                    {/* <Icon name="search" size={20} color="#666" style={styles.searchIcon} /> */}

                    <TextInput
                        style={styles.searchInput}
                        placeholder="Search location"
                        placeholderTextColor="#666"
                    />
                </View>

                {/* N√∫t Pay */}
                <TouchableOpacity style={styles.payButton}
                    onPress={() => { router.push('/screen/qrScan'); }}
                >
                    <Image
                        source={{ uri: 'https://img.icons8.com/3d-fluency/94/qr-code.png' }}
                        style={{ width: 24, height: 24 }}
                    />
                    <Text style={styles.payText}>Pay</Text>
                </TouchableOpacity>
            </View>

            {/* Banner qu·∫£ng c√°o */}
            {/* <View style={styles.banner}>
                <View style={styles.bannerTextContainer}>
                    <Text style={styles.bannerText}>Save 30% OFF</Text>
                    <Text style={styles.bannerSubText}>FIRST 2 ORDERS</Text>
                    <Text style={styles.bannerCode}>USE CODE DCVIET30</Text>
                </View>
                <View style={styles.bannerImageContainer}>
                    <Image
                        source={{ uri: 'https://img.icons8.com/3d-fluency/94/grinning-squinting-face.png' }}
                        style={styles.bannerImage}
                    />
                </View>
            </View> */}

            <TouchableOpacity
                style={styles.banner}
                onPress={handlePress}
                activeOpacity={0.7}
            >
                <View style={styles.bannerTextContainer}>
                    <Text style={styles.bannerText}>Save 30% OFF</Text>
                    <Text style={styles.bannerSubText}>FIRST 2 ORDERS</Text>
                    <Text style={styles.bannerCode}>USE CODE DCVIET30</Text>
                </View>
                <View style={styles.bannerImageContainer}>
                    <LottieView
                        ref={animationRef}
                        source={animationData}
                        style={styles.bannerImage}
                        autoPlay={false} // T·∫Øt autoplay ƒë·ªÉ t∆∞∆°ng t√°c b·∫±ng tay
                        loop={false} // L·∫∑p animation
                    />
                </View>
            </TouchableOpacity>

            {/* L∆∞·ªõi d·ªãch v·ª• */}
            <View style={styles.serviceList}>{renderServiceRows()}</View>
        </ScrollView>
    );
};

const styles = StyleSheet.create({
    container: {
        flex: 1,
        backgroundColor: '#f5f5f5',
    },
    headerSection: {
        flexDirection: 'row',
        alignItems: 'center',
        paddingHorizontal: 15,
        paddingVertical: 10,
        backgroundColor: '#fff',
    },
    menuButton: {
        padding: 10,
        // backgroundColor: '#f0f0f0',
        borderRadius: 50,
        marginRight: 10,
    },
    searchBar: {
        flex: 1,
        flexDirection: 'row',
        alignItems: 'center',
        backgroundColor: '#f0f0f0',
        borderRadius: 25,
        paddingHorizontal: 15,
        height: 40,
        marginRight: 10,
    },
    searchIcon: {
        marginRight: 10,
    },
    searchInput: {
        flex: 1,
        fontSize: 16,
        color: '#000',
    },
    payButton: {
        flexDirection: 'row',
        alignItems: 'center',
        backgroundColor: '#000',
        borderRadius: 25,
        paddingHorizontal: 15,
        paddingVertical: 10,
    },
    payText: {
        color: '#fff',
        fontSize: 16,
        fontWeight: 'bold',
        marginLeft: 5,
    },
    // Styles cho Banner v·ªõi layout 2 c·ªôt
    banner: {
        flexDirection: 'row', // S·ª≠ d·ª•ng layout 2 c·ªôt
        backgroundColor: '#d3c1e5',
        padding: 20,
        borderRadius: 10,
        margin: 10,
        alignItems: 'center',
        justifyContent: 'space-between',
    },
    bannerTextContainer: {
        flex: 1, // C·ªôt b√™n tr√°i cho text
        justifyContent: 'center',
    },
    bannerText: {
        fontSize: 24,
        fontWeight: 'bold',
        color: '#000',
    },
    bannerSubText: {
        fontSize: 18,
        color: '#000',
        marginVertical: 5,
    },
    bannerCode: {
        fontSize: 16,
        color: '#000',
        fontWeight: 'bold',
    },
    bannerImageContainer: {
        flex: 1, // C·ªôt b√™n ph·∫£i cho h√¨nh ·∫£nh
        alignItems: 'flex-end', // CƒÉn h√¨nh ·∫£nh sang ph·∫£i
    },
    bannerImage: {
        width: 100,
        height: 100,
    },
    serviceList: {
        paddingHorizontal: 10,
    },
    row: {
        flexDirection: 'row',
        justifyContent: 'flex-start',
        marginBottom: 10,
    },
    serviceItem: {
        flexDirection: 'column',
        borderRadius: 10,
        height: 120,
        alignItems: 'center',
        justifyContent: 'center',
        margin: 5,
        padding: 10,
        elevation: 2,
        shadowColor: '#000',
        shadowOffset: { width: 0, height: 2 },
        shadowOpacity: 0.1,
        shadowRadius: 2,
    },
    icon: {
        fontSize: 30,
        marginBottom: 5,
    },
    serviceName: {
        fontSize: 14,
        fontWeight: 'bold',
        color: '#000',
        textAlign: 'center',
    },
    serviceTime: {
        fontSize: 12,
        color: '#666',
        marginTop: 5,
    },
});

export default HeroScreen;